#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace P2LINQ2SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="P2_1920")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InserttCatalogo(tCatalogo instance);
    partial void UpdatetCatalogo(tCatalogo instance);
    partial void DeletetCatalogo(tCatalogo instance);
    partial void InserttProveedor(tProveedor instance);
    partial void UpdatetProveedor(tProveedor instance);
    partial void DeletetProveedor(tProveedor instance);
    partial void InserttProducto(tProducto instance);
    partial void UpdatetProducto(tProducto instance);
    partial void DeletetProducto(tProducto instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::P2LINQ2SQL.Properties.Settings.Default.P2_1920ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tCatalogo> tCatalogo
		{
			get
			{
				return this.GetTable<tCatalogo>();
			}
		}
		
		public System.Data.Linq.Table<tProveedor> tProveedor
		{
			get
			{
				return this.GetTable<tProveedor>();
			}
		}
		
		public System.Data.Linq.Table<tProducto> tProducto
		{
			get
			{
				return this.GetTable<tProducto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCatalogo")]
	public partial class tCatalogo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private int _IdProveedor;
		
		private string _Categoria;
		
		private float _precio;
		
		private EntityRef<tProveedor> _tProveedor;
		
		private EntityRef<tProducto> _tProducto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnIdProveedorChanging(int value);
    partial void OnIdProveedorChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnprecioChanging(float value);
    partial void OnprecioChanged();
    #endregion
		
		public tCatalogo()
		{
			this._tProveedor = default(EntityRef<tProveedor>);
			this._tProducto = default(EntityRef<tProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					if (this._tProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					if (this._tProveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(50)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Real NOT NULL")]
		public float precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tProveedor_tCatalogo", Storage="_tProveedor", ThisKey="IdProveedor", OtherKey="IdProveedor", IsForeignKey=true)]
		public tProveedor tProveedor
		{
			get
			{
				return this._tProveedor.Entity;
			}
			set
			{
				tProveedor previousValue = this._tProveedor.Entity;
				if (((previousValue != value) 
							|| (this._tProveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tProveedor.Entity = null;
						previousValue.tCatalogo.Remove(this);
					}
					this._tProveedor.Entity = value;
					if ((value != null))
					{
						value.tCatalogo.Add(this);
						this._IdProveedor = value.IdProveedor;
					}
					else
					{
						this._IdProveedor = default(int);
					}
					this.SendPropertyChanged("tProveedor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tProducto_tCatalogo", Storage="_tProducto", ThisKey="IdProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public tProducto tProducto
		{
			get
			{
				return this._tProducto.Entity;
			}
			set
			{
				tProducto previousValue = this._tProducto.Entity;
				if (((previousValue != value) 
							|| (this._tProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tProducto.Entity = null;
						previousValue.tCatalogo.Remove(this);
					}
					this._tProducto.Entity = value;
					if ((value != null))
					{
						value.tCatalogo.Add(this);
						this._IdProducto = value.IdProducto;
					}
					else
					{
						this._IdProducto = default(int);
					}
					this.SendPropertyChanged("tProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tProveedor")]
	public partial class tProveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProveedor;
		
		private string _Proveedor;
		
		private EntitySet<tCatalogo> _tCatalogo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProveedorChanging(int value);
    partial void OnIdProveedorChanged();
    partial void OnProveedorChanging(string value);
    partial void OnProveedorChanged();
    #endregion
		
		public tProveedor()
		{
			this._tCatalogo = new EntitySet<tCatalogo>(new Action<tCatalogo>(this.attach_tCatalogo), new Action<tCatalogo>(this.detach_tCatalogo));
			OnCreated();
		}

        public override string ToString()
        {
            return Proveedor;
        }

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proveedor", DbType="VarChar(50)")]
		public string Proveedor
		{
			get
			{
				return this._Proveedor;
			}
			set
			{
				if ((this._Proveedor != value))
				{
					this.OnProveedorChanging(value);
					this.SendPropertyChanging();
					this._Proveedor = value;
					this.SendPropertyChanged("Proveedor");
					this.OnProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tProveedor_tCatalogo", Storage="_tCatalogo", ThisKey="IdProveedor", OtherKey="IdProveedor")]
		public EntitySet<tCatalogo> tCatalogo
		{
			get
			{
				return this._tCatalogo;
			}
			set
			{
				this._tCatalogo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tCatalogo(tCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.tProveedor = this;
		}
		
		private void detach_tCatalogo(tCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.tProveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tProducto")]
	public partial class tProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private string _NombreProducto;
		
		private EntitySet<tCatalogo> _tCatalogo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnNombreProductoChanging(string value);
    partial void OnNombreProductoChanged();
    #endregion
		
		public tProducto()
		{
			this._tCatalogo = new EntitySet<tCatalogo>(new Action<tCatalogo>(this.attach_tCatalogo), new Action<tCatalogo>(this.detach_tCatalogo));
			OnCreated();
		}

        public override string ToString()
        {
            return NombreProducto;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProducto", DbType="VarChar(50)")]
		public string NombreProducto
		{
			get
			{
				return this._NombreProducto;
			}
			set
			{
				if ((this._NombreProducto != value))
				{
					this.OnNombreProductoChanging(value);
					this.SendPropertyChanging();
					this._NombreProducto = value;
					this.SendPropertyChanged("NombreProducto");
					this.OnNombreProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tProducto_tCatalogo", Storage="_tCatalogo", ThisKey="IdProducto", OtherKey="IdProducto")]
		public EntitySet<tCatalogo> tCatalogo
		{
			get
			{
				return this._tCatalogo;
			}
			set
			{
				this._tCatalogo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tCatalogo(tCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.tProducto = this;
		}
		
		private void detach_tCatalogo(tCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.tProducto = null;
		}
	}
}
#pragma warning restore 1591
